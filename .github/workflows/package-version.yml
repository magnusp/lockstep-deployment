name: PR merge
on:
  pull_request:
    types:
      - closed
  workflow_dispatch: {}

permissions:
  contents: read
  deployments: write
  #checks: write # JUnit reports
  #pull-requests: write # JUnit reports
  #packages: write
  #actions: write
  #attestations: write # Required for the Docker build-push-action to work
  #id-token: write # Required for the Docker build-push-action to work

jobs:
  push-tag:
    name: Push version tag
    if: github.event.pull_request.merged == true
    runs-on: "${{ vars.DEFAULT_RUNNER }}"

    #env:
    #  IMAGE_OWNER: ${{ github.repository_owner }}
    #  IMAGE_REPO: ${{ github.event.repository.name }}
    #  PR_ID: ${{ github.event.pull_request.number }}
    #  # Create the full dynamic tag: owner/repo:pr-123
    #  FULL_IMAGE_NAME_TAG: ${{ github.repository_owner }}/${{ github.event.repository.name }}:pr-${{ github.event.pull_request.number }}

    steps:
      - name: Create Deployment
        env:
          GH_TOKEN: ${{ github.token }}
          OWNER: ${{ github.repository_owner }}
          REPO: ${{ github.event.repository.name }}
          MERGE_SHA: ${{ github.event.pull_request.merge_commit_sha }}
        # Replace with your actual deployment action or script
        run: |
          echo "Creating deployment based on commit: $DEPLOY_SHA"
          gh api \
          --method POST \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          /repos/$OWNER/$REPO/deployments \
          -f "ref=$MERGE_SHA" -f 'description=Deploy requested from PR merge' -f environment='production'