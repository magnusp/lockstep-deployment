name: Tag version after merged pull request to default branch
on:
  pull_request:
    types:
      - closed
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  run-check:
    runs-on: "${{ vars.DEFAULT_RUNNER }}"
    steps:
      - env:
          SUMMARY: |
            | Parameter | Value |
            | github.event.pull_request.merged | ${{ github.event.pull_request.merged }} |
            | github.event.pull_request.base.ref | ${{ github.event.pull_request.base.ref }} |
        run: |
          set -x
          echo $SUMMARY >> $GITHUB_STEP_SUMMARY
  deploy-next-verion:
    name: Deploy next version
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
    runs-on: "${{ vars.DEFAULT_RUNNER }}"

    #env:
    #  IMAGE_OWNER: ${{ github.repository_owner }}
    #  IMAGE_REPO: ${{ github.event.repository.name }}
    #  PR_ID: ${{ github.event.pull_request.number }}
    #  # Create the full dynamic tag: owner/repo:pr-123
    #  FULL_IMAGE_NAME_TAG: ${{ github.repository_owner }}/${{ github.event.repository.name }}:pr-${{ github.event.pull_request.number }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for tags
      - name: Create git tag
        id: git-tag
        run: |
          echo PR was merged
          set -x
          git fetch --tags
          latest_tag=$(git for-each-ref --count=1 --sort=-v:refname --format '%(refname)' refs/tags/v*)
          tag_version="${latest_tag:11}"
          
          next_version=$(($tag_version + 1))
          next_tag="v$next_version"
          
          echo "next_version=$next_version" >> "$GITHUB_OUTPUT"
          echo "next_tag=$next_tag" >> "$GITHUB_OUTPUT"
          
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a ${next_tag} -m ${next_tag}
          git push origin ${next_tag}

      - name: Create repository_dispatch for new tag
        env:
          GH_TOKEN: ${{ github.token }}
          REPO: ${{ github.repository }}
          PAYLOAD_JSON: |
            {
              "event_type": "version_tag_created",
              "client_payload": {
                "tag": "${{ steps.git-tag.outputs.next_tag }}"
              }
            }
          SUMMARY: |
            Dispatched `version_tag_created` event onto `${{ github.repository }}` with tag `${{ steps.git-tag.outputs.next_tag }}`
        run: |
          echo "$PAYLOAD_JSON" | gh api \
            --method POST \
            repos/$REPO/dispatches \
            --input -
          echo $SUMMARY >> $GITHUB_STEP_SUMMARY
